// Mocks generated by Mockito 5.4.6 from annotations
// in admobt/test/mocks/admob_mocks_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:google_mobile_ads/src/ad_containers.dart' as _i2;
import 'package:google_mobile_ads/src/ad_listeners.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeAdRequest_0 extends _i1.SmartFake implements _i2.AdRequest {
  _FakeAdRequest_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdSize_1 extends _i1.SmartFake implements _i2.AdSize {
  _FakeAdSize_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBannerAdListener_2 extends _i1.SmartFake
    implements _i3.BannerAdListener {
  _FakeBannerAdListener_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterstitialAdLoadCallback_3 extends _i1.SmartFake
    implements _i3.InterstitialAdLoadCallback {
  _FakeInterstitialAdLoadCallback_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRewardedAdLoadCallback_4 extends _i1.SmartFake
    implements _i3.RewardedAdLoadCallback {
  _FakeRewardedAdLoadCallback_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNativeAdListener_5 extends _i1.SmartFake
    implements _i3.NativeAdListener {
  _FakeNativeAdListener_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAppOpenAdLoadCallback_6 extends _i1.SmartFake
    implements _i3.AppOpenAdLoadCallback {
  _FakeAppOpenAdLoadCallback_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BannerAd].
///
/// See the documentation for Mockito's code generation for more information.
class MockBannerAd extends _i1.Mock implements _i2.BannerAd {
  MockBannerAd() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AdRequest get request => (super.noSuchMethod(
        Invocation.getter(#request),
        returnValue: _FakeAdRequest_0(
          this,
          Invocation.getter(#request),
        ),
      ) as _i2.AdRequest);

  @override
  _i2.AdSize get size => (super.noSuchMethod(
        Invocation.getter(#size),
        returnValue: _FakeAdSize_1(
          this,
          Invocation.getter(#size),
        ),
      ) as _i2.AdSize);

  @override
  _i3.BannerAdListener get listener => (super.noSuchMethod(
        Invocation.getter(#listener),
        returnValue: _FakeBannerAdListener_2(
          this,
          Invocation.getter(#listener),
        ),
      ) as _i3.BannerAdListener);

  @override
  String get adUnitId => (super.noSuchMethod(
        Invocation.getter(#adUnitId),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#adUnitId),
        ),
      ) as String);

  @override
  set responseInfo(_i2.ResponseInfo? value) => super.noSuchMethod(
        Invocation.setter(
          #responseInfo,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> load() => (super.noSuchMethod(
        Invocation.method(
          #load,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i2.AdSize?> getPlatformAdSize() => (super.noSuchMethod(
        Invocation.method(
          #getPlatformAdSize,
          [],
        ),
        returnValue: _i5.Future<_i2.AdSize?>.value(),
      ) as _i5.Future<_i2.AdSize?>);

  @override
  _i5.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [AdRequest].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdRequest extends _i1.Mock implements _i2.AdRequest {
  MockAdRequest() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [AdSize].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdSize extends _i1.Mock implements _i2.AdSize {
  MockAdSize() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get height => (super.noSuchMethod(
        Invocation.getter(#height),
        returnValue: 0,
      ) as int);

  @override
  int get width => (super.noSuchMethod(
        Invocation.getter(#width),
        returnValue: 0,
      ) as int);
}

/// A class which mocks [BannerAdListener].
///
/// See the documentation for Mockito's code generation for more information.
class MockBannerAdListener extends _i1.Mock implements _i3.BannerAdListener {
  MockBannerAdListener() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [InterstitialAd].
///
/// See the documentation for Mockito's code generation for more information.
class MockInterstitialAd extends _i1.Mock implements _i2.InterstitialAd {
  MockInterstitialAd() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AdRequest get request => (super.noSuchMethod(
        Invocation.getter(#request),
        returnValue: _FakeAdRequest_0(
          this,
          Invocation.getter(#request),
        ),
      ) as _i2.AdRequest);

  @override
  _i3.InterstitialAdLoadCallback get adLoadCallback => (super.noSuchMethod(
        Invocation.getter(#adLoadCallback),
        returnValue: _FakeInterstitialAdLoadCallback_3(
          this,
          Invocation.getter(#adLoadCallback),
        ),
      ) as _i3.InterstitialAdLoadCallback);

  @override
  set fullScreenContentCallback(
          _i3.FullScreenContentCallback<_i2.InterstitialAd>? value) =>
      super.noSuchMethod(
        Invocation.setter(
          #fullScreenContentCallback,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onPaidEvent(_i3.OnPaidEventCallback? value) => super.noSuchMethod(
        Invocation.setter(
          #onPaidEvent,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get adUnitId => (super.noSuchMethod(
        Invocation.getter(#adUnitId),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#adUnitId),
        ),
      ) as String);

  @override
  set responseInfo(_i2.ResponseInfo? value) => super.noSuchMethod(
        Invocation.setter(
          #responseInfo,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> show() => (super.noSuchMethod(
        Invocation.method(
          #show,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setImmersiveMode(bool? immersiveModeEnabled) =>
      (super.noSuchMethod(
        Invocation.method(
          #setImmersiveMode,
          [immersiveModeEnabled],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [RewardedAd].
///
/// See the documentation for Mockito's code generation for more information.
class MockRewardedAd extends _i1.Mock implements _i2.RewardedAd {
  MockRewardedAd() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.RewardedAdLoadCallback get rewardedAdLoadCallback => (super.noSuchMethod(
        Invocation.getter(#rewardedAdLoadCallback),
        returnValue: _FakeRewardedAdLoadCallback_4(
          this,
          Invocation.getter(#rewardedAdLoadCallback),
        ),
      ) as _i3.RewardedAdLoadCallback);

  @override
  set fullScreenContentCallback(
          _i3.FullScreenContentCallback<_i2.RewardedAd>? value) =>
      super.noSuchMethod(
        Invocation.setter(
          #fullScreenContentCallback,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onUserEarnedRewardCallback(_i3.OnUserEarnedRewardCallback? value) =>
      super.noSuchMethod(
        Invocation.setter(
          #onUserEarnedRewardCallback,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onPaidEvent(_i3.OnPaidEventCallback? value) => super.noSuchMethod(
        Invocation.setter(
          #onPaidEvent,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get adUnitId => (super.noSuchMethod(
        Invocation.getter(#adUnitId),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#adUnitId),
        ),
      ) as String);

  @override
  set responseInfo(_i2.ResponseInfo? value) => super.noSuchMethod(
        Invocation.setter(
          #responseInfo,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> show(
          {required _i3.OnUserEarnedRewardCallback? onUserEarnedReward}) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [],
          {#onUserEarnedReward: onUserEarnedReward},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setServerSideOptions(
          _i2.ServerSideVerificationOptions? options) =>
      (super.noSuchMethod(
        Invocation.method(
          #setServerSideOptions,
          [options],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setImmersiveMode(bool? immersiveModeEnabled) =>
      (super.noSuchMethod(
        Invocation.method(
          #setImmersiveMode,
          [immersiveModeEnabled],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [NativeAd].
///
/// See the documentation for Mockito's code generation for more information.
class MockNativeAd extends _i1.Mock implements _i2.NativeAd {
  MockNativeAd() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.NativeAdListener get listener => (super.noSuchMethod(
        Invocation.getter(#listener),
        returnValue: _FakeNativeAdListener_5(
          this,
          Invocation.getter(#listener),
        ),
      ) as _i3.NativeAdListener);

  @override
  set customOptions(Map<String, Object>? value) => super.noSuchMethod(
        Invocation.setter(
          #customOptions,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get adUnitId => (super.noSuchMethod(
        Invocation.getter(#adUnitId),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#adUnitId),
        ),
      ) as String);

  @override
  set responseInfo(_i2.ResponseInfo? value) => super.noSuchMethod(
        Invocation.setter(
          #responseInfo,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> load() => (super.noSuchMethod(
        Invocation.method(
          #load,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [AppOpenAd].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppOpenAd extends _i1.Mock implements _i2.AppOpenAd {
  MockAppOpenAd() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.AppOpenAdLoadCallback get adLoadCallback => (super.noSuchMethod(
        Invocation.getter(#adLoadCallback),
        returnValue: _FakeAppOpenAdLoadCallback_6(
          this,
          Invocation.getter(#adLoadCallback),
        ),
      ) as _i3.AppOpenAdLoadCallback);

  @override
  int get orientation => (super.noSuchMethod(
        Invocation.getter(#orientation),
        returnValue: 0,
      ) as int);

  @override
  set fullScreenContentCallback(
          _i3.FullScreenContentCallback<_i2.AppOpenAd>? value) =>
      super.noSuchMethod(
        Invocation.setter(
          #fullScreenContentCallback,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onPaidEvent(_i3.OnPaidEventCallback? value) => super.noSuchMethod(
        Invocation.setter(
          #onPaidEvent,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get adUnitId => (super.noSuchMethod(
        Invocation.getter(#adUnitId),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#adUnitId),
        ),
      ) as String);

  @override
  set responseInfo(_i2.ResponseInfo? value) => super.noSuchMethod(
        Invocation.setter(
          #responseInfo,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> show() => (super.noSuchMethod(
        Invocation.method(
          #show,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setImmersiveMode(bool? immersiveModeEnabled) =>
      (super.noSuchMethod(
        Invocation.method(
          #setImmersiveMode,
          [immersiveModeEnabled],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
